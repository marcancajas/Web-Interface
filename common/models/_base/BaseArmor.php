<?php

/**
 * This is the model base class for the table "Armor".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Armor".
 *
 * Columns in table "Armor" available as properties of the model,
 * followed by relations of table "Armor" available as properties of the model.
 *
 * @property string $id
 * @property string $class
 * @property string $name
 * @property string $description
 * @property double $buy
 * @property double $sell
 * @property integer $weight
 * @property integer $defence
 *
 * @property Character[] $characters
 */
abstract class BaseArmor extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'Armor';
	}

	public function getDbConnection()
    {
        return Yii::app()->dbGame;
    }

	public static function label($n = 1) {
		return Yii::t('app', 'Armor|Armors', $n);
	}

	public static function representingColumn() {
		return 'class';
	}

	public function rules() {
		return array(
			array('weight, defence', 'numerical', 'integerOnly'=>true),
			array('buy, sell', 'numerical'),
			array('class', 'length', 'max'=>30),
			array('name', 'length', 'max'=>50),
			array('description', 'length', 'max'=>100),
			array('class, name, description, buy, sell, weight, defence', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, class, name, description, buy, sell, weight, defence', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'characters' => array(self::HAS_MANY, 'Character', 'armor_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'class' => Yii::t('app', 'Class'),
			'name' => Yii::t('app', 'Name'),
			'description' => Yii::t('app', 'Description'),
			'buy' => Yii::t('app', 'Buy'),
			'sell' => Yii::t('app', 'Sell'),
			'weight' => Yii::t('app', 'Weight'),
			'defence' => Yii::t('app', 'Defence'),
			'characters' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('class', $this->class, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('buy', $this->buy);
		$criteria->compare('sell', $this->sell);
		$criteria->compare('weight', $this->weight);
		$criteria->compare('defence', $this->defence);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}